{"version":3,"sources":["components/Header.js","components/Ingredients.js","components/AddRecipe.js","components/ShowAddForm.js","components/Recipes.js","App.js","index.js"],"names":["Header","className","Ingredients","deleteIngredient","addIngredient","ingrList","useState","qty","setQty","unit","setUnit","ingName","setIngName","qtyValidated","setQtyValidated","ingNameValidated","setIngNameValidated","Row","Form","Label","Col","sm","Floating","Control","id","type","value","onChange","e","target","htmlFor","Feedback","Select","Button","variant","size","onClick","preventDefault","length","map","ingr","CloseButton","ingId","AddRecipe","addRecipe","recipeNameValid","setRecipeNameValid","servesValid","setServesValid","ingredientsValid","setIngredientsValid","recipeName","setRecipeName","prepTime","setPrepTime","cookingTime","setCookingTime","servingPpl","setServingPpl","method","setMethod","setIngrList","noValidate","onSubmit","serves","ingredients","xl","required","md","filter","ingredient","newIngredient","Math","floor","random","as","ShowAddForm","onAdd","Recipes","recipes","deleteRecipe","Container","Accordion","recipe","Item","eventKey","toUpperCase","Body","title","App","showAddRecipe","setShowAddRecipe","setRecipes","newRecipe","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cad513d.chunk.js","sourcesContent":["\n\nfunction Header() {\n    return (\n        <header className=\"p-3 mb-5\">\n           <h1>My Recipe Book</h1> \n           <blockquote>Store all your recipes in a web page</blockquote>\n        </header>\n    )\n}\n\nexport default Header\n","import { useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\n\nfunction Ingredients({\n  // ingredients,\n  deleteIngredient,\n  addIngredient,\n  ingrList,\n}) {\n  const [qty, setQty] = useState(\"\");\n  const [unit, setUnit] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n \n\n  //validation states warning messages\n  const [qtyValidated, setQtyValidated] = useState(false);\n  const [ingNameValidated, setIngNameValidated] = useState(false);\n\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    // validation for the ingredients qty and name\n    if (!qty || !ingName) {\n      setQtyValidated(true);\n      setIngNameValidated(true);\n    } else {\n       addIngredient( qty, unit, ingName );\n\n      //reset the ingredients values\n      setQty(\"\");\n      setUnit(\"\");\n      setIngName(\"\");\n      setQtyValidated(false);\n      setIngNameValidated(false);\n    }\n  };\n\n  return (\n    <>\n      <Row className=\"g-3 mb-1\">\n        <Form.Label className=\"mb-0\">Ingredients:</Form.Label>\n        <Col sm className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"qty\"\n              type=\"number\"\n              className=\"pb-1\"\n              value={qty}\n              onChange={(e) => setQty(e.target.value)}\n            />\n            <label htmlFor=\"qty\" className=\"pt-2\">\n              Ing. Quantity *\n            </label>\n            <Form.Control.Feedback type=\"invalid\">\n              Please add the ingredient quantity.\n            </Form.Control.Feedback>\n          </Form.Floating>\n          {qtyValidated && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the ingredient quantity.\n            </Form.Label>\n          )}\n        </Col>\n\n        <Col sm className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Select\n              aria-label=\"Unit category options\"\n              className=\"pb-1\"\n              id=\"unit\"\n              value={unit}\n              onChange={(e) => setUnit(e.target.value)}\n            >\n              <option></option>\n              <option value=\"g\">gram</option>\n              <option value=\"lb\">pound</option>\n              <option value=\"cup\">cup</option>\n              <option value=\"ml\">millilitre</option>\n            </Form.Select>\n            <label htmlFor=\"unit\" className=\"pt-2\">\n              Ing. Unit\n            </label>\n          </Form.Floating>\n        </Col>\n\n        <Col sm className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"ing-name\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={ingName}\n              onChange={(e) => setIngName(e.target.value)}\n            />\n            <label htmlFor=\"ing-name\" className=\"pt-2\">\n              Ing. Name *\n            </label>\n            <Form.Control.Feedback type=\"invalid\">\n              Please add the ingredient name.\n            </Form.Control.Feedback>\n          </Form.Floating>\n          {ingNameValidated && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the ingredient name.\n            </Form.Label>\n          )}\n        </Col>\n      </Row>\n\n      <Button\n        variant=\"primary\"\n        size=\"sm\"\n        className=\"mb-3\"\n        onClick={onAdd}\n      >\n        Add Ingredient\n      </Button>\n\n      {ingrList.length > 0 ? (\n        <ul className=\"d-flex  flex-wrap ps-0\">\n          {ingrList.map((ingr) => (\n            <li className=\"ing-item mb-3 d-flex justify-content-between align-items-center px-2 mx-2\">\n              <div className=\"ps-1\">\n                <span>{ingr.qty}</span> <span>{ingr.unit}</span>{\" \"}\n                <span>{ingr.ingName}</span>\n              </div>\n              <CloseButton\n                className=\"btn-close ms-2 align-self-start align-self-md-center mt-1\"\n                onClick={() => deleteIngredient(ingr.ingId)}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"mb-5\">No ingredients added.</p>\n      )}\n    </>\n  );\n}\n\nexport default Ingredients;\n","import { useState } from \"react\";\nimport Ingredients from \"./Ingredients\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { BsClockHistory } from \"react-icons/bs\";\nimport { BsClock } from \"react-icons/bs\";\nimport { FaUtensils } from \"react-icons/fa\";\nimport { GiCampCookingPot } from \"react-icons/gi\";\n\nfunction AddRecipe({ addRecipe }) {\n  // validation states\n  const [recipeNameValid, setRecipeNameValid] = useState(false);\n  const [servesValid, setServesValid] = useState(false);\n  const [ingredientsValid, setIngredientsValid] = useState(false);\n\n  // Recipe form states\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [prepTime, setPrepTime] = useState(\"\");\n  const [cookingTime, setCookingTime] = useState(\"\");\n  const [servingPpl, setServingPpl] = useState(\"\");\n  const [method, setMethod] = useState(\"\");\n\n  const [ingrList, setIngrList] = useState([\n    // {\n    //         ingId: 4,\n    //         qty: 200,\n    //         unit: \"ml\",\n    //         ingName: \"tomato\",\n    //       },\n    //       {\n    //         ingId: 8,\n    //         qty: 200,\n    //         unit: \"g\",\n    //         ingName: \"bechamel\",\n    //       },\n    //       {\n    //         ingId: 6,\n    //         qty: 300,\n    //         unit: \"g\",\n    //         ingName: \"cheese\",\n    //       },\n  ]);\n\n  // fanction to add and display the new recipe\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    if (!recipeName || !servingPpl || (ingrList.length <= 0)) {\n      setServesValid(true);\n      setRecipeNameValid(true);\n      setIngredientsValid(true);\n    } else {\n      addRecipe({\n        recipeName,\n        prepTime,\n        cookingTime,\n        serves: servingPpl,\n        ingredients: ingrList,\n        method,\n      });\n\n      //reset form fields\n      setRecipeName(\"\");\n      setPrepTime(\"\");\n      setCookingTime(\"\");\n      setServingPpl(\"\");\n      setMethod(\"\");\n      setServesValid(false);\n      setRecipeNameValid(false);\n      setIngredientsValid(false);\n    }\n  };\n\n  // Delete ingredient\n  const deleteIngredient = (id) => {\n    // console.log(\"delete\", id);\n    setIngrList(ingrList.filter((ingredient) => ingredient.ingId !== id));\n  };\n\n  // Add ingredient\n  const addIngredient = (qty, unit, ingName) => {\n    const ingId = Math.floor(Math.random() * 1000) + 1;\n    // console.log(id);\n    const newIngredient = { ingId, qty, unit, ingName };\n    setIngrList([...ingrList, newIngredient]);\n  };\n\n  return (\n    <Form className=\"mx-5 mb-5\" noValidate onSubmit={onAdd}>\n      {/* recipe name */}\n      <Row className=\"g-3 mb-3\">\n        <Col xl={6} className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"recipeName\"\n              type=\"text\"\n              //placeholder=\"lasagna\"\n              className=\"pb-1\"\n              required\n              value={recipeName}\n              onChange={(e) => setRecipeName(e.target.value)}\n            />\n            <label htmlFor=\"recipeName\" className=\"pt-2\">\n              Recipe Name *\n            </label>\n          </Form.Floating>\n          {recipeNameValid && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add a recipe name.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* method time */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"prepTime\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={prepTime}\n              onChange={(e) => setPrepTime(e.target.value)}\n            />\n            <label htmlFor=\"prepTime\" className=\"pt-2\">\n              <BsClockHistory className=\"pe-1 pb-1\" />\n              Preparation Time\n            </label>\n          </Form.Floating>\n        </Col>\n\n        {/* cooking time */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"cookingTime\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={cookingTime}\n              onChange={(e) => setCookingTime(e.target.value)}\n            />\n            <label htmlFor=\"cookingTime\" className=\"pt-2\">\n              <BsClock className=\"pe-1 pb-1\" />\n              Cooking Time\n            </label>\n          </Form.Floating>\n        </Col>\n\n        {/* serves people */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"servingPpl\"\n              type=\"number\"\n              className=\"pb-1\"\n              required\n              value={servingPpl}\n              onChange={(e) => setServingPpl(e.target.value)}\n            />\n            <label htmlFor=\"servingPpl\" className=\"pt-2\">\n              <FaUtensils className=\"pe-1 pb-1\" />\n              Serves *\n            </label>\n          </Form.Floating>\n          {servesValid && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the serving number.\n            </Form.Label>\n          )}\n        </Col>\n      </Row>\n\n      {/* ingredients */}\n      {ingredientsValid && (\n        <div className=\"text-center\">\n          <Form.Label className=\"m-0 text-danger\">\n            Please add a ingredients.\n          </Form.Label>\n        </div>\n      )}\n      <Ingredients\n        key={ingrList.ingId}\n        deleteIngredient={deleteIngredient}\n        addIngredient={addIngredient}\n        ingrList={ingrList}\n      />\n\n      {/* method steps */}\n      <Row className=\"g-3 mb-3\">\n        <Col>\n          <Form.Floating className=\"mb-3\">\n            <Form.Control\n              id=\"method\"\n              as=\"textarea\"\n              className=\"pb-1 textarea\"\n              value={method}\n              onChange={(e) => setMethod(e.target.value)}\n            />\n            <label htmlFor=\"method\" className=\"pt-2\">\n              <GiCampCookingPot className=\"pe-1 pb-1\" />\n              Method\n            </label>\n          </Form.Floating>\n        </Col>\n      </Row>\n      <div className=\"text-center\">\n        <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n          Save Recipe\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default AddRecipe;\n","import Button from \"react-bootstrap/Button\";\n\nfunction ShowAddForm({ onAdd }) {\n  return (\n    <div className=\"d-flex justify-content-center mb-5\">\n      <Button onClick={onAdd}>Add Recipe</Button>\n    </div>\n  );\n}\n\nexport default ShowAddForm;\n","import Accordion from \"react-bootstrap/Accordion\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { ImBin } from \"react-icons/im\";\n\nfunction Recipes({ recipes, deleteRecipe }) {\n  return (\n    <>\n      <Container className=\"mb-3\">\n        <Accordion className=\"mx-1 mb-5\">\n          {recipes.map((recipe) => (\n            <Accordion.Item eventKey={recipe.id}>\n              <Accordion.Header>\n                {recipe.recipeName.toUpperCase()}\n              </Accordion.Header>\n              <Accordion.Body>\n                <div className=\"d-flex justify-content-between mb-3 \">\n                  <Col className=\"text-center\">\n                    <Col>Prep</Col>\n                    <Col>{recipe.prepTime}</Col>\n                  </Col>\n                  <Col className=\"text-center\">\n                    <Col>Cooking</Col>\n                    <Col>{recipe.cookingTime}</Col>\n                  </Col>\n                  <Col className=\"text-center\">\n                    <Col>Serves</Col>\n                    <Col>{recipe.serves}</Col>\n                  </Col>\n                </div>\n                <Row className=\"mt-4 g-3\">\n                  <Col md={6} className=\"px-4 mb-3\">\n                    <h4>Ingredients</h4>\n                    <Container className=\"ps-0 mt-4 d-flex justify-content-between\">\n                      <h6>Number of servings</h6>\n                      <div>+ 4 -</div>\n                    </Container>\n                    {recipe.ingredients.length > 0 ? (\n                      recipe.ingredients.map((ingr) => (\n                        <Row>\n                          <Col>\n                            <span>{ingr.qty}</span>\n                            <span className=\"me-2\">{ingr.unit}</span>\n\n                            <span className=\"mx-2\">{ingr.ingName}</span>\n                          </Col>\n                        </Row>\n                      ))\n                    ) : (\n                      <p className=\"mb-5 disabled\">No ingredients added.</p>\n                    )}\n                  </Col>\n                  <Col md={6} className=\"px-4 mb-3\">\n                    <h4>Method</h4>\n                    <Container className=\"ps-0 mt-4\">{recipe.method}</Container>\n                  </Col>\n                </Row>\n                <div className=\"text-end mt-3\">\n                  <ImBin\n                    className=\"btn-delete px-2 py-1\"\n                    title=\"Delete recipe\"\n                    onClick={() => deleteRecipe(recipe.id)}\n                  />\n                </div>\n              </Accordion.Body>\n            </Accordion.Item>\n          ))}\n        </Accordion>\n      </Container>\n    </>\n  );\n}\n\nexport default Recipes;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport AddRecipe from \"./components/AddRecipe\";\nimport ShowAddForm from \"./components/ShowAddForm\";\nimport Recipes from \"./components/Recipes\";\n\nimport { useState } from \"react\";\n\nfunction App() {\n  const [showAddRecipe, setShowAddRecipe] = useState(false);\n  \n\n  const [recipes, setRecipes] = useState([\n    // {\n    //   id: 1,\n    //   recipeName: \"Lasagna\",\n    //   prepTime: \"20 mins\",\n    //   cookingTime: \"30 mins\",\n    //   serves: 4,\n    //   ingredients: [\n    //     {\n    //       ingId: 4,\n    //       ingQty: 200,\n    //       unit: \"ml\",\n    //       ingName: \"tomato\",\n    //     },\n    //     {\n    //       ingId: 6,\n    //       ingQty: 200,\n    //       unit: \"g\",\n    //       ingName: \"bechamel\",\n    //     },\n    //     {\n    //       ingId: 6,\n    //       ingQty: 300,\n    //       unit: \"g\",\n    //       ingName: \"cheese\",\n    //     },\n    //   ],\n    //   method:\n    //     \"Create a layer of the lasagna with tomato ragú, bechamel and cheese untul the top of the tray.\",\n    // },\n    // {\n    //   id: 2,\n    //   recipeName: \"Lasagna\",\n    //   prepTime: \"20 mins\",\n    //   cookingTime: \"30 mins\",\n    //   serves: 4,\n    //   ingredients: [\n    //     {\n    //       ingId: 1,\n    //       ingQty: 200,\n    //       unit: \"ml\",\n    //       ingName: \"tomato\",\n    //     },\n    //     {\n    //       ingId: 2,\n    //       ingQty: 200,\n    //       unit: \"g\",\n    //       ingName: \"bechamel\",\n    //     },\n    //     {\n    //       ingId: 3,\n    //       ingQty: 300,\n    //       unit: \"g\",\n    //       ingName: \"cheese\",\n    //     },\n    //   ],\n    //   method:\n    //     \"Create a layer of the lasagna with tomato ragú, bechamel and cheese untul the top of the tray.\",\n    // },\n    // {\n    //   id: 3,\n    //   recipeName: \"Lasagna\",\n    //   prepTime: \"20 mins\",\n    //   cookingTime: \"30 mins\",\n    //   serves: 4,\n    //   ingredients: [\n    //     {\n    //       ingId: 7,\n    //       ingQty: 200,\n    //       unit: \"ml\",\n    //       ingName: \"tomato\",\n    //     },\n    //     {\n    //       ingId: 8,\n    //       ingQty: 200,\n    //       unit: \"g\",\n    //       ingName: \"bechamel\",\n    //     },\n    //     {\n    //       ingId: 9,\n    //       ingQty: 300,\n    //       unit: \"g\",\n    //       ingName: \"cheese\",\n    //     },\n    //   ],\n    //   method:\n    //     \"Create a layer of the lasagna with tomato ragú, bechamel and cheese untul the top of the tray.\",\n    // },\n  ]);\n\n\n  // Delete recipe\n  const deleteRecipe = (id) => {\n    //console.log(\"delete\", id);\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  };\n\n  // Add Recipe\n  const addRecipe = (recipe) => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    // console.log(id);\n    const newRecipe = { id, ...recipe };\n    setRecipes([...recipes, newRecipe]);\n  };\n\n  return (\n    <div>\n      <Header />\n      <ShowAddForm onAdd={() => setShowAddRecipe(!showAddRecipe)} />\n      {showAddRecipe && (\n        <AddRecipe\n          // ingredients={ingredients}\n          // deleteIngredient={deleteIngredient}\n          // addIngredient={addIngredient}\n          addRecipe={addRecipe}\n        />\n      )}\n      <Recipes recipes={recipes} deleteRecipe={deleteRecipe} key={recipes.id} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}