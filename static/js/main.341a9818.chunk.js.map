{"version":3,"sources":["components/Header.js","components/Ingredients.js","components/AddRecipe.js","components/ShowAddForm.js","components/Recipes.js","App.js","index.js"],"names":["Header","className","Ingredients","deleteIngredient","addIngredient","ingrList","clearIgredients","setClearIngredients","useState","qty","setQty","unit","setUnit","ingName","setIngName","qtyValidated","setQtyValidated","ingNameValidated","setIngNameValidated","Row","Form","Label","Col","sm","Floating","Control","id","type","value","onChange","e","target","htmlFor","Button","variant","size","onClick","preventDefault","map","ingr","CloseButton","ingId","AddRecipe","addRecipe","recipeNameValid","setRecipeNameValid","servesValid","setServesValid","ingredientsValid","setIngredientsValid","recipeName","setRecipeName","prepTime","setPrepTime","cookingTime","setCookingTime","servingPpl","setServingPpl","method","setMethod","setIngrList","noValidate","onSubmit","length","serves","ingredients","xl","required","md","filter","ingredient","newIngredient","Math","floor","random","as","ShowAddForm","onAdd","Recipes","recipes","deleteRecipe","setRecipes","Container","Accordion","recipe","Item","eventKey","toUpperCase","Body","title","App","showAddRecipe","setShowAddRecipe","newRecipe","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.341a9818.chunk.js","sourcesContent":["\n\nfunction Header() {\n    return (\n        <header className=\"p-3 mb-5\">\n           <h1>My Recipe Book</h1> \n           <blockquote>Store all your recipes in a web page</blockquote>\n        </header>\n    )\n}\n\nexport default Header\n","import { useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\n\nfunction Ingredients({\n  deleteIngredient,\n  addIngredient,\n  ingrList,\n  clearIgredients,\n  setClearIngredients,\n}) {\n  const [qty, setQty] = useState(\"\");\n  const [unit, setUnit] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n\n  //validation states warning messages\n  const [qtyValidated, setQtyValidated] = useState(false);\n  const [ingNameValidated, setIngNameValidated] = useState(false);\n\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    // validation for the ingredients qty and name\n    if (!qty || !ingName) {\n      setQtyValidated(true);\n      setIngNameValidated(true);\n    } else {\n      addIngredient(qty, unit, ingName);\n      setClearIngredients(true);\n\n      //reset the ingredients values\n      setQty(\"\");\n      setUnit(\"\");\n      setIngName(\"\");\n      setQtyValidated(false);\n      setIngNameValidated(false);\n    }\n  };\n\n  return (\n    <>\n      <Row className=\"g-3 mb-1\">\n        <Form.Label className=\"mb-0\">Ingredients:</Form.Label>\n\n        {/* ingredient name */}\n        <Col sm className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"ing-name\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={ingName}\n              onChange={(e) => setIngName(e.target.value)}\n            />\n            <label htmlFor=\"ing-name\" className=\"pt-2\">\n              Ing. Name *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 text-secondary validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {ingNameValidated && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the ingredient name.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* ingredient qty */}\n        <Col sm className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"qty\"\n              type=\"number\"\n              className=\"pb-1\"\n              value={qty}\n              onChange={(e) => setQty(e.target.value)}\n            />\n            <label htmlFor=\"qty\" className=\"pt-2\">\n              Ing. Quantity *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 text-secondary validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {qtyValidated && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the ingredient quantity.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* ingredient unit */}\n        <Col sm className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"unit\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={unit}\n              onChange={(e) => setUnit(e.target.value)}\n            />\n            <label htmlFor=\"ing-name\" className=\"pt-2\">\n              Ing. Unit\n            </label>\n          </Form.Floating>\n        </Col>\n      </Row>\n\n      <Button variant=\"primary\" size=\"sm\" className=\"mb-3\" onClick={onAdd}>\n        Add Ingredient\n      </Button>\n\n      {clearIgredients ? (\n        <ul className=\"d-flex  flex-wrap ps-0\">\n          {ingrList.map((ingr) => (\n            <li className=\"ing-item mb-3 d-flex justify-content-between align-items-center px-2 me-2\">\n              <div>\n                <span>{ingr.qty}</span> <span>{ingr.unit}</span>{\" \"}\n                <span>{ingr.ingName}</span>\n              </div>\n              <CloseButton\n                className=\"btn-close ms-2 align-self-start align-self-md-center mt-1\"\n                onClick={() => deleteIngredient(ingr.ingId)}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"mb-5\">No ingredients added.</p>\n      )}\n    </>\n  );\n}\n\nexport default Ingredients;\n","import { useState } from \"react\";\nimport Ingredients from \"./Ingredients\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { BsClockHistory } from \"react-icons/bs\";\nimport { BsClock } from \"react-icons/bs\";\nimport { FaUtensils } from \"react-icons/fa\";\nimport { GiCampCookingPot } from \"react-icons/gi\";\n\nfunction AddRecipe({ addRecipe }) {\n  // validation states\n  const [recipeNameValid, setRecipeNameValid] = useState(false);\n  const [servesValid, setServesValid] = useState(false);\n  const [ingredientsValid, setIngredientsValid] = useState(false);\n\n  // state to clear ingredients list after submitting the form\n  const [clearIgredients, setClearIngredients] = useState(false);\n\n  // Recipe form states\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [prepTime, setPrepTime] = useState(\"\");\n  const [cookingTime, setCookingTime] = useState(\"\");\n  const [servingPpl, setServingPpl] = useState(\"\");\n  const [method, setMethod] = useState(\"\");\n\n  const [ingrList, setIngrList] = useState([\n    // {\n    //         ingId: 4,\n    //         qty: 200,\n    //         unit: \"ml\",\n    //         ingName: \"tomato\",\n    //       },\n    //       {\n    //         ingId: 8,\n    //         qty: 200,\n    //         unit: \"g\",\n    //         ingName: \"bechamel\",\n    //       },\n    //       {\n    //         ingId: 6,\n    //         qty: 300,\n    //         unit: \"g\",\n    //         ingName: \"cheese\",\n    //       },\n  ]);\n\n  // fanction to add and display the new recipe\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    if (!recipeName || !servingPpl || (ingrList.length <= 0)) {\n      setServesValid(true);\n      setRecipeNameValid(true);\n      setIngredientsValid(true);\n    } else {\n      addRecipe({\n        recipeName,\n        prepTime,\n        cookingTime,\n        serves: servingPpl,\n        ingredients: ingrList,\n        method,\n      });\n\n      //reset form fields\n      setRecipeName(\"\");\n      setPrepTime(\"\");\n      setCookingTime(\"\");\n      setServingPpl(\"\");\n      setMethod(\"\");\n      setServesValid(false);\n      setRecipeNameValid(false);\n      setIngredientsValid(false);\n      setClearIngredients(false);\n\n    }\n  };\n\n  // Delete ingredient\n  const deleteIngredient = (id) => {\n    // console.log(\"delete\", id);\n    setIngrList(ingrList.filter((ingredient) => ingredient.ingId !== id));\n  };\n\n  // Add ingredient\n  const addIngredient = (qty, unit, ingName) => {\n    const ingId = Math.floor(Math.random() * 1000) + 1;\n    // console.log(id);\n    const newIngredient = { ingId, qty, unit, ingName };\n    setIngrList([...ingrList, newIngredient]);\n  };\n\n  return (\n    <Form className=\"mx-5 mb-5\" noValidate onSubmit={onAdd}>\n      {/* recipe name */}\n      <Row className=\"g-3 mb-3\">\n        <Col xl={6} className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"recipeName\"\n              type=\"text\"\n              //placeholder=\"lasagna\"\n              className=\"pb-1\"\n              required\n              value={recipeName}\n              onChange={(e) => setRecipeName(e.target.value)}\n            />\n            <label htmlFor=\"recipeName\" className=\"pt-2\">\n              Recipe Name *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 text-secondary validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {recipeNameValid && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add a recipe name.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* method time */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"prepTime\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={prepTime}\n              onChange={(e) => setPrepTime(e.target.value)}\n            />\n            <label htmlFor=\"prepTime\" className=\"pt-2\">\n              <BsClockHistory className=\"pe-1 pb-1\" />\n              Preparation Time\n            </label>\n          </Form.Floating>\n        </Col>\n\n        {/* cooking time */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"cookingTime\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={cookingTime}\n              onChange={(e) => setCookingTime(e.target.value)}\n            />\n            <label htmlFor=\"cookingTime\" className=\"pt-2\">\n              <BsClock className=\"pe-1 pb-1\" />\n              Cooking Time\n            </label>\n          </Form.Floating>\n        </Col>\n\n        {/* serves people */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"servingPpl\"\n              type=\"number\"\n              className=\"pb-1\"\n              required\n              value={servingPpl}\n              onChange={(e) => setServingPpl(e.target.value)}\n            />\n            <label htmlFor=\"servingPpl\" className=\"pt-2\">\n              <FaUtensils className=\"pe-1 pb-1\" />\n              Serves *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 text-secondary validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {servesValid && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the serving number.\n            </Form.Label>\n          )}\n        </Col>\n      </Row>\n\n      {/* ingredients */}\n      {ingredientsValid && (\n        <div className=\"text-center\">\n          <Form.Label className=\"m-0 text-danger\">\n            Please add a ingredients.\n          </Form.Label>\n        </div>\n      )}\n      <Ingredients\n        key={ingrList.ingId}\n        deleteIngredient={deleteIngredient}\n        addIngredient={addIngredient}\n        ingrList={ingrList}\n        clearIgredients={clearIgredients}\n        setClearIngredients={setClearIngredients}\n      />\n\n      {/* method steps */}\n      <Row className=\"g-3 mb-3\">\n        <Col>\n          <Form.Floating className=\"mb-3\">\n            <Form.Control\n              id=\"method\"\n              as=\"textarea\"\n              className=\"pb-1 textarea\"\n              value={method}\n              onChange={(e) => setMethod(e.target.value)}\n            />\n            <label htmlFor=\"method\" className=\"pt-2\">\n              <GiCampCookingPot className=\"pe-1 pb-1\" />\n              Method\n            </label>\n          </Form.Floating>\n        </Col>\n      </Row>\n      <div className=\"text-center\">\n        <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n          Save Recipe\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default AddRecipe;\n","import Button from \"react-bootstrap/Button\";\n\nfunction ShowAddForm({ onAdd }) {\n  return (\n    <div className=\"d-flex justify-content-center mb-5\">\n      <Button onClick={onAdd}>Add Recipe</Button>\n    </div>\n  );\n}\n\nexport default ShowAddForm;\n","import { useState } from \"react\";\n\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n//import Button from \"react-bootstrap/Button\";\n\nimport { ImBin } from \"react-icons/im\";\nimport { IoMdAddCircleOutline } from \"react-icons/io\";\nimport { HiOutlineMinusCircle } from \"react-icons/hi\";\n\nfunction Recipes({ recipes, setRecipes, deleteRecipe }) {\n  // const [servesCount, setServesCount] = useState();\n\n  // const increaseServes = (serves) => {\n  //    return serves++;\n  // };\n\n  // const decreaseServes = () => {};\n\n  return (\n    <>\n      <Container className=\"mb-3\">\n        <Accordion className=\"mx-1 mb-5\">\n          {recipes.map((recipe) => (\n            <Accordion.Item eventKey={recipe.id}>\n              <Accordion.Header>\n                {recipe.recipeName.toUpperCase()}\n              </Accordion.Header>\n              <Accordion.Body>\n                <div className=\"d-flex justify-content-between mb-3 \">\n                  <Col className=\"text-center\">\n                    <Col>Prep</Col>\n                    <Col>{recipe.prepTime}</Col>\n                  </Col>\n                  <Col className=\"text-center\">\n                    <Col>Cooking</Col>\n                    <Col>{recipe.cookingTime}</Col>\n                  </Col>\n                  <Col className=\"text-center\">\n                    <Col>Serves</Col>\n                    <Col>{recipe.serves}</Col>\n                  </Col>\n                </div>\n                <Row className=\"mt-4 g-3\">\n                  <Col md={6} className=\"px-4 mb-3\">\n                    <h4>Ingredients</h4>\n                    <Container className=\"ps-0 mt-4 d-flex justify-content-between\">\n                      <h6>Number of servings</h6>\n                      <div>\n                        <HiOutlineMinusCircle className=\"btn-operators\" />\n                        <span className=\"mx-1\">{recipe.serves}</span>\n                        <IoMdAddCircleOutline className=\"btn-operators\" />\n                      </div>\n                    </Container>\n                    {recipe.ingredients.length > 0 ? (\n                      recipe.ingredients.map((ingr) => (\n                        <Row>\n                          <Col>\n                            <span>{ingr.qty}</span>\n                            <span className=\"me-2\">{ingr.unit}</span>\n                            <span className=\"mx-2\">{ingr.ingName}</span>\n                          </Col>\n                        </Row>\n                      ))\n                    ) : (\n                      <p className=\"mb-5 disabled\">No ingredients added.</p>\n                    )}\n                  </Col>\n                  <Col md={6} className=\"px-4 mb-3\">\n                    <h4>Method</h4>\n                    <Container className=\"ps-0 mt-4\">{recipe.method}</Container>\n                  </Col>\n                </Row>\n                <div className=\"text-end mt-3\">\n                  <ImBin\n                    className=\"btn-delete px-2 py-1\"\n                    title=\"Delete recipe\"\n                    onClick={() => deleteRecipe(recipe.id)}\n                  />\n                </div>\n              </Accordion.Body>\n            </Accordion.Item>\n          ))}\n        </Accordion>\n      </Container>\n    </>\n  );\n}\n\nexport default Recipes;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport AddRecipe from \"./components/AddRecipe\";\nimport ShowAddForm from \"./components/ShowAddForm\";\nimport Recipes from \"./components/Recipes\";\n\nimport { useState } from \"react\";\n\nfunction App() {\n  const [showAddRecipe, setShowAddRecipe] = useState(false);\n  \n\n  const [recipes, setRecipes] = useState([\n    {\n      id: 1,\n      recipeName: \"Lasagna\",\n      prepTime: \"20 mins\",\n      cookingTime: \"30 mins\",\n      serves: 4,\n      ingredients: [\n        {\n          ingId: 4,\n          qty: 200,\n          unit: \"ml\",\n          ingName: \"tomato\",\n        },\n        {\n          ingId: 6,\n          qty: 200,\n          unit: \"g\",\n          ingName: \"bechamel\",\n        },\n        {\n          ingId: 7,\n          qty: 300,\n          unit: \"g\",\n          ingName: \"cheese\",\n        },\n      ],\n      method:\n        \"Create a layer of the lasagna with tomato ragú, bechamel and cheese untul the top of the tray.\",\n    },\n    {\n      id: 2,\n      recipeName: \"Spaghetti\",\n      prepTime: \"20 mins\",\n      cookingTime: \"30 mins\",\n      serves: 4,\n      ingredients: [\n        {\n          ingId: 1,\n          qty: 200,\n          unit: \"ml\",\n          ingName: \"tomato\",\n        },\n        {\n          ingId: 2,\n          qty: 200,\n          unit: \"g\",\n          ingName: \"bechamel\",\n        },\n        {\n          ingId: 3,\n          qty: 300,\n          unit: \"g\",\n          ingName: \"cheese\",\n        },\n      ],\n      method:\n        \"Create a layer of the lasagna with tomato ragú, bechamel and cheese until the top of the tray.\",\n    },\n    {\n      id: 3,\n      recipeName: \"Gnocchi\",\n      prepTime: \"20 mins\",\n      cookingTime: \"30 mins\",\n      serves: 4,\n      ingredients: [\n        {\n          ingId: 7,\n          qty: 200,\n          unit: \"ml\",\n          ingName: \"tomato\",\n        },\n        {\n          ingId: 8,\n          qty: 200,\n          unit: \"g\",\n          ingName: \"bechamel\",\n        },\n        {\n          ingId: 9,\n          qty: 300,\n          unit: \"g\",\n          ingName: \"cheese\",\n        },\n      ],\n      method:\n        \"Create a layer of the lasagna with tomato ragú, bechamel and cheese untul the top of the tray.\",\n    },\n  ]);\n\n\n  // Delete recipe\n  const deleteRecipe = (id) => {\n    //console.log(\"delete\", id);\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  };\n\n  // Add Recipe\n  const addRecipe = (recipe) => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    // console.log(id);\n    const newRecipe = { id, ...recipe };\n    setRecipes([...recipes, newRecipe]);\n  };\n\n  return (\n    <div>\n      <Header />\n      <ShowAddForm onAdd={() => setShowAddRecipe(!showAddRecipe)} />\n      {showAddRecipe && (\n        <AddRecipe\n        key={recipes.id}\n          addRecipe={addRecipe}\n        />\n      )}\n      <Recipes recipes={recipes} setRecipes={setRecipes} deleteRecipe={deleteRecipe} key={recipes.id} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}