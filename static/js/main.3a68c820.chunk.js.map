{"version":3,"sources":["components/Header.js","components/Ingredients.js","components/AddRecipe.js","components/ShowAddForm.js","components/Recipes.js","components/Footer.js","App.js","index.js"],"names":["Header","className","Ingredients","deleteIngredient","addIngredient","ingrList","servingPpl","colSize","useState","qty","setQty","unit","setUnit","ingName","setIngName","qtyValidated","setQtyValidated","ingNameValidated","setIngNameValidated","unitLabel","htmlFor","Row","Col","sm","Form","Floating","Control","id","type","value","onChange","e","target","Label","FloatingLabel","controlId","label","Select","Button","variant","size","onClick","preventDefault","length","map","ingr","CloseButton","ingId","title","AddRecipe","addRecipe","setShowAddRecipe","setIngrList","recipeNameValid","setRecipeNameValid","servesValid","setServesValid","ingredientsValid","setIngredientsValid","recipeName","setRecipeName","prepTime","setPrepTime","cookingTime","setCookingTime","setServingPpl","method","setMethod","servesOrigin","setServesOrigin","showAlert","setShowAlert","noValidate","onSubmit","parseInt","serves","ingredients","xl","required","md","as","Alert","show","ShowAddForm","onAdd","showAddRecipe","Recipes","recipes","setRecipes","deleteRecipe","delIngrRecipes","Container","Accordion","recipe","Item","eventKey","updatedRecipe","servesReset","toUpperCase","Body","decreaseServes","increaseServes","Math","round","ingPerServe","addNewIngredient","Footer","Date","getFullYear","href","rel","App","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","filter","ingredient","newIngredient","floor","random","newRecipe","ingrId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a68c820.chunk.js","sourcesContent":["\n\nfunction Header() {\n    return (\n        <header className=\"px-3 py-2 mb-5 header ms-2 mt-2\">\n           <h1 className=\"fs-1 fw-bolder\">MY RECIPE BOOK</h1> \n           <blockquote className=\"fw-bolder\">Keep all your recipes always with you</blockquote>\n        </header>\n    )\n}\n\nexport default Header\n","import { useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\"\n\nimport { GiKitchenScale, GiFruitBowl } from \"react-icons/gi\";\nimport { BiAbacus } from \"react-icons/bi\";\n\nfunction Ingredients({\n  deleteIngredient,\n  addIngredient,\n  ingrList,\n  servingPpl,\n  colSize\n}) {\n  const [qty, setQty] = useState(\"\");\n  const [unit, setUnit] = useState();\n  const [ingName, setIngName] = useState(\"\");\n\n  //validation states warning messages\n  const [qtyValidated, setQtyValidated] = useState(false);\n  const [ingNameValidated, setIngNameValidated] = useState(false);\n\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    // validation for the ingredients qty and name\n    if (!qty || !ingName) {\n      setQtyValidated(true);\n      setIngNameValidated(true);\n    } else {\n      const ingPerServe = (qty / servingPpl);\n      //console.log(\"servingPpl:\", servingPpl);\n      //console.log(\"ingPerServe:\", ingPerServe);\n      addIngredient(qty, unit, ingName, ingPerServe);\n\n      //reset the ingredients values\n      setQty(\"\");\n      setUnit(\"Select the ingredient unit\");\n      setIngName(\"\");\n      setQtyValidated(false);\n      setIngNameValidated(false);\n    }\n  };\n\n  const unitLabel = (<label htmlFor=\"ing-name\">\n  <GiKitchenScale className=\"pe-1 pb-1 form-icons\"/>\n  Ing. Unit\n</label>);\n\n  return (\n    <>\n      <Row className=\"g-3 mb-1\">\n        {/* <Form.Label className=\"mb-0\">Ingredients:</Form.Label> */}\n\n        {/* ingredient name */}\n        <Col sm={colSize} className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"ing-name\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={ingName}\n              onChange={(e) => setIngName(e.target.value)}\n            />\n            <label htmlFor=\"ing-name\" className=\"pt-2\">\n              <GiFruitBowl className=\"pe-1 pb-1 form-icons\" />\n              Ing. Name *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {ingNameValidated && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the ingredient name.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* ingredient qty */}\n        <Col sm={colSize} className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"qty\"\n              type=\"number\"\n              className=\"pb-1\"\n              value={qty}\n              onChange={(e) => setQty(e.target.value)}\n            />\n            <label htmlFor=\"qty\" className=\"pt-2\">\n              <BiAbacus className=\"pe-1 pb-1 form-icons\" />\n              Ing. Quantity *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {qtyValidated && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the ingredient quantity.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* ingredient unit */}\n        <Col sm={colSize} className=\"mt-1 mb-3\">\n          <FloatingLabel controlId=\"floatingSelect\" label={unitLabel}>\n            <Form.Select aria-label=\"Floating label ingredients unit\" value={unit}\n              onChange={(e) => setUnit(e.target.value)}>\n              <option value=\"\">Select the ingredient unit</option>\n              <option value=\"g\">gram</option>\n              <option value=\"lb\">pound</option>\n              <option value=\"ml\">millilitre</option>\n              <option value=\"cups\">cup</option>\n              <option value=\"tsp\">teaspoon</option>\n              <option value=\"tbs\">tablespoon</option>\n              <option value=\" \">unit</option>\n            </Form.Select>\n          </FloatingLabel>\n          {/* <Form.Floating>\n            <Form.Control\n              id=\"unit\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={unit}\n              onChange={(e) => setUnit(e.target.value.toLowerCase())}\n            />\n            <label htmlFor=\"ing-name\" className=\"pt-2\">\n              <GiKitchenScale className=\"pe-1 pb-1 form-icons\"/>\n              Ing. Unit\n            </label>\n          </Form.Floating> */}\n        </Col>\n      </Row>\n\n      <Button variant=\"success\" size=\"sm\" className=\"mb-3\" onClick={onAdd}>\n        ADD INGREDIENT\n      </Button>\n\n      {ingrList.length > 0 ? (\n        <ul className=\"d-flex  flex-wrap ps-0\">\n          {ingrList.map((ingr) => (\n            <li\n              className=\"ing-item mb-3 d-flex justify-content-between align-items-center px-2 me-2\"\n              key={ingr.ingId}\n            >\n              <div>\n                <span>{ingr.qty}</span>\n                <span> {ingr.unit}</span> <span>{ingr.ingName}</span>\n              </div>\n              <CloseButton\n                className=\"btn-close ms-2 align-self-start align-self-md-center mt-1\"\n                onClick={() => deleteIngredient(ingr.ingId)}\n                title=\"Delete ingredient\"\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"mb-5\">No Ingredients to Show.</p>\n      )}\n    </>\n  );\n}\n\nexport default Ingredients;\n","import { useState } from \"react\";\nimport Ingredients from \"./Ingredients\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\n\nimport { BsClockHistory } from \"react-icons/bs\";\nimport { BsClock } from \"react-icons/bs\";\nimport { FaUtensils } from \"react-icons/fa\";\nimport { GiCampCookingPot } from \"react-icons/gi\";\nimport { VscBook } from \"react-icons/vsc\";\n\nfunction AddRecipe({\n  addRecipe,\n  setShowAddRecipe,\n  ingrList,\n  setIngrList,\n  deleteIngredient,\n  addIngredient,\n}) {\n  // validation states\n  const [recipeNameValid, setRecipeNameValid] = useState(false);\n  const [servesValid, setServesValid] = useState(false);\n  const [ingredientsValid, setIngredientsValid] = useState(false);\n\n  // Recipe form states\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [prepTime, setPrepTime] = useState(\"\");\n  const [cookingTime, setCookingTime] = useState(\"\");\n  const [servingPpl, setServingPpl] = useState(\"\");\n  const [method, setMethod] = useState(\"\");\n\n  const [servesOrigin, setServesOrigin] = useState(\"\");\n  \n\n  const [showAlert, setShowAlert] = useState(false);\n\n  //const [ingrList, setIngrList] = useState([]);\n\n  // fanction to add and display the new recipe\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    if (!recipeName || !servingPpl || ingrList.length <= 0) {\n      setServesValid(true);\n      setRecipeNameValid(true);\n      setIngredientsValid(true);\n      //alert(\"Please check the required fields!\");\n      setShowAlert(true);\n    } else {\n      setServesOrigin(parseInt(servingPpl));\n      addRecipe({\n        recipeName,\n        prepTime,\n        cookingTime,\n        serves: servingPpl,\n        ingredients: ingrList,\n        method,\n        servesOrigin,\n      });\n\n      //reset form fields\n      setRecipeName(\"\");\n      setPrepTime(\"\");\n      setCookingTime(\"\");\n      setServingPpl(\"\");\n      setMethod(\"\");\n      setIngrList([]);\n      setServesValid(false);\n      setRecipeNameValid(false);\n      setIngredientsValid(false);\n      setShowAddRecipe(false);\n      setShowAlert(false);\n    }\n  };\n\n  // // Delete ingredient\n  // const deleteIngredient = (id) => {\n  //   // console.log(\"delete\", id);\n  //   setIngrList(ingrList.filter((ingredient) => ingredient.ingId !== id));\n  // };\n\n  // // Add ingredient\n  // const addIngredient = (qty, unit, ingName, ingPerServe) => {\n  //   const ingId = Math.floor(Math.random() * 1000) + 1;\n  //   // console.log(id);\n  //   const newIngredient = { ingId, qty, unit, ingName, ingPerServe };\n  //   setIngrList([...ingrList, newIngredient]);\n  // };\n\n  return (\n    <Form className=\"form-style mx-5 mb-5 p-3\" noValidate onSubmit={onAdd}>\n      <Row className=\"flex-row justify-content-end mb-3 me-1\">\n        <CloseButton\n          onClick={() => setShowAddRecipe(false)}\n          className=\"close-form\"\n        />\n      </Row>\n      {/* recipe name */}\n      <Row className=\"g-3 mb-3\">\n        <Col xl={6} className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"recipeName\"\n              type=\"text\"\n              // placeholder=\"lasagna\"\n              className=\"pb-1\"\n              required\n              value={recipeName}\n              onChange={(e) => setRecipeName(e.target.value)}\n            />\n            <label htmlFor=\"recipeName\" className=\"pt-2\">\n              <VscBook className=\"pe-1 pb-1 form-icons\" />\n              Recipe Name *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {recipeNameValid && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the recipe name.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* method time */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"prepTime\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={prepTime}\n              onChange={(e) => setPrepTime(e.target.value)}\n            />\n            <label htmlFor=\"prepTime\" className=\"pt-2\">\n              <BsClockHistory className=\"pe-1 pb-1 form-icons\" />\n              Preparation Time\n            </label>\n          </Form.Floating>\n        </Col>\n\n        {/* cooking time */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"cookingTime\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={cookingTime}\n              onChange={(e) => setCookingTime(e.target.value)}\n            />\n            <label htmlFor=\"cookingTime\" className=\"pt-2\">\n              <BsClock className=\"pe-1 pb-1 form-icons\" />\n              Cooking Time\n            </label>\n          </Form.Floating>\n        </Col>\n\n        {/* serves people */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"servingPpl\"\n              type=\"number\"\n              className=\"pb-1\"\n              required\n              value={servingPpl}\n              onChange={(e) => {\n                setServingPpl(e.target.value);\n                setServesOrigin(e.target.value);\n              }}\n            />\n            <label htmlFor=\"servingPpl\" className=\"pt-2\">\n              <FaUtensils className=\"pe-1 pb-1 form-icons\" />\n              Serves *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {servesValid && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the serving number.\n            </Form.Label>\n          )}\n        </Col>\n      </Row>\n\n      {/* ingredients */}\n      {ingredientsValid && (\n        <div className=\"text-center\">\n          <Form.Label className=\"m-0 text-danger\">\n            Please add ingredients.\n          </Form.Label>\n        </div>\n      )}\n      <Form.Label className=\"mb-4\">Ingredients:</Form.Label>\n      <Ingredients\n        key={ingrList.ingId}\n        deleteIngredient={deleteIngredient}\n        addIngredient={addIngredient}\n        ingrList={ingrList}\n        servingPpl={servingPpl}\n        colSize=\"4\"\n      />\n\n      {/* method steps */}\n      <Row className=\"g-3 mb-3\">\n        <Col>\n          <Form.Floating className=\"mb-3\">\n            <Form.Control\n              id=\"method\"\n              as=\"textarea\"\n              className=\"pb-1 textarea\"\n              value={method}\n              onChange={(e) => setMethod(e.target.value)}\n            />\n            <label htmlFor=\"method\" className=\"pt-2\">\n              <GiCampCookingPot className=\"pe-1 pb-1 form-icons\" />\n              Method\n            </label>\n          </Form.Floating>\n        </Col>\n      </Row>\n      <Alert variant=\"danger\" show={showAlert}>\n        Please check the required fields!\n      </Alert>\n      <div className=\"text-center\">\n        <Button variant=\"success\" type=\"submit\" size=\"lg\">\n          SAVE RECIPE\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default AddRecipe;\n","import Button from \"react-bootstrap/Button\";\n\nfunction ShowAddForm({ onAdd, showAddRecipe }) {\n  return (\n    <div className=\"d-flex justify-content-center mb-5\">\n      {/* <Button onClick={onAdd} variant={showAddRecipe ? \"danger\" : \"success\"} size=\"lg\">\n      {showAddRecipe ? \"CLOSE FORM\" : \"ADD RECIPE\"}\n      </Button> */}\n      {!showAddRecipe && (<Button onClick={onAdd} variant=\"success\" size=\"lg\">\n      ADD RECIPE\n      </Button>)}\n      \n    </div>\n  );\n}\n\nexport default ShowAddForm;\n","//import { useState } from \"react\";\nimport Ingredients from \"./Ingredients\";\n\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n//import Form from \"react-bootstrap/Form\";\n\nimport { ImBin } from \"react-icons/im\";\nimport { IoMdAddCircleOutline } from \"react-icons/io\";\nimport { HiOutlineMinusCircle } from \"react-icons/hi\";\n\nfunction Recipes({\n  recipes,\n  setRecipes,\n  deleteRecipe,\n  ingrList,\n  setIngrList,\n  deleteIngredient,\n  addIngredient,\n  delIngrRecipes,\n}) {\n  const increaseServes = (id) => {\n    const updatedRecipe = recipes.map((recipe) => {\n      if (recipe.id === id) {\n        return { ...recipe, serves: parseInt(recipe.serves) + 1 };\n      }\n      return recipe;\n    });\n    setRecipes(updatedRecipe);\n  };\n\n  const decreaseServes = (id) => {\n    const updatedRecipe = recipes.map((recipe) => {\n      if (recipe.id === id) {\n        return {\n          ...recipe,\n          serves: parseInt(recipe.serves) > 1 ? parseInt(recipe.serves) - 1 : 1,\n        };\n      }\n      return recipe;\n    });\n    setRecipes(updatedRecipe);\n  };\n\n  //reset the rerving number to the origin once the recipe is close\n  const servesReset = (id) => {\n    const updatedRecipe = recipes.map((recipe) => {\n      if (recipe.id === id) {\n        return { ...recipe, serves: parseInt(recipe.servesOrigin) };\n      }\n      return recipe;\n    });\n    setRecipes(updatedRecipe);\n  };\n\n  //add new ingredient from the recipe\n  const addNewIngredient = (id) => {\n    //console.log(...ingrList);\n    const updatedRecipe = recipes.map((recipe) => {\n      if (recipe.id === id) {\n        return { ...recipe, ingredients: [...recipe.ingredients, ...ingrList] };\n      }\n      return recipe;\n    });\n    setRecipes(updatedRecipe);\n    setIngrList([]);\n  };\n\n  return (\n    <>\n      {recipes.length > 0 ? (\n        <Container className=\"mb-3\">\n          <Accordion className=\" mb-5\">\n            {recipes.map((recipe) => (\n              <Accordion.Item eventKey={recipe.id} key={recipe.id}>\n                <Accordion.Header onClick={() => servesReset(recipe.id)}>\n                  {recipe.recipeName.toUpperCase()}\n                </Accordion.Header>\n                <Accordion.Body className=\"px-3\">\n                  <div className=\"d-flex justify-content-between mb-3\">\n                    <Col className=\"text-center recipe-info\">\n                      <Col>Prep</Col>\n                      <Col className=\"f-bold\">{recipe.prepTime}</Col>\n                    </Col>\n                    <Col className=\"text-center recipe-info\">\n                      <Col>Cooking</Col>\n                      <Col className=\"f-bold\">{recipe.cookingTime}</Col>\n                    </Col>\n                    <Col className=\"text-center recipe-info\">\n                      <Col>Serves</Col>\n                      <Col className=\"f-bold\">{recipe.servesOrigin}</Col>\n                    </Col>\n                  </div>\n                  <Row className=\"mt-4 justify-content-around\">\n                    <Col md={5} className=\"p-3 pb-5 mb-3 recipe-sections\">\n                      <h4 className=\"f-bold\">Ingredients</h4>\n                      <Container className=\"px-0 my-4 d-flex justify-content-between\">\n                        <h6 className=\"f-bold\">Number of servings</h6>\n                        <div>\n                          <HiOutlineMinusCircle\n                            className=\"btn-operators\"\n                            onClick={() => decreaseServes(recipe.id)}\n                          />\n                          <span className=\"mx-1 f-bold\">{recipe.serves}</span>\n                          <IoMdAddCircleOutline\n                            className=\"btn-operators\"\n                            onClick={() => increaseServes(recipe.id)}\n                          />\n                        </div>\n                      </Container>\n                      {recipe.ingredients.map((ingr) => (\n                        <Row\n                          key={ingr.ingId}\n                          className=\"mx-1 recipe-ing-list justify-content-between\"\n                        >\n                          <Col className=\"recipe-ing p-1\">\n                            <span>\n                              {Math.round(\n                                ingr.ingPerServe * recipe.serves * 10\n                              ) / 10}\n                            </span>\n                            <span className=\"me-2\"> {ingr.unit}</span>\n                            <span className=\"\">{ingr.ingName}</span>\n                          </Col>\n                          <Col sm={1}>\n                            <ImBin\n                              className=\"btn-delete px-2 py-1\"\n                              title=\"Delete ingredient\"\n                              onClick={() =>\n                                delIngrRecipes(recipe.id, ingr.ingId)\n                              }\n                            />\n                          </Col>\n                        </Row>\n                      ))}\n\n                      {/* edit ingredient starts here */}\n                      <div className=\"my-5\">\n                        <Ingredients\n                          key={ingrList.ingId}\n                          deleteIngredient={deleteIngredient}\n                          addIngredient={addIngredient}\n                          ingrList={ingrList}\n                          servingPpl={recipe.serves}\n                          colSize=\"12\"\n                        />\n\n                        <Button\n                          variant=\"success\"\n                          size=\"sm\"\n                          className=\"mb-3\"\n                          onClick={() => addNewIngredient(recipe.id)}\n                        >\n                          SAVE INGREDIENT\n                        </Button>\n                      </div>\n                      {/* edit ingredients ends here */}\n                    </Col>\n\n                    <Col md={5} className=\"p-3 pb-5 mb-3 recipe-sections\">\n                      <h4 className=\"f-bold\">Method</h4>\n                      <Container className=\"px-0 mt-4\">\n                        {recipe.method}\n                      </Container>\n                    </Col>\n                  </Row>\n                  <div className=\"d-flex justify-content-end mt-3\">\n                    <ImBin\n                      className=\"btn-delete px-2 py-1\"\n                      title=\"Delete recipe\"\n                      onClick={() => deleteRecipe(recipe.id)}\n                    />\n                  </div>\n                </Accordion.Body>\n              </Accordion.Item>\n            ))}\n          </Accordion>\n        </Container>\n      ) : (\n        <div className=\"text-center pt-5\">\n          <p className=\"mx-5\">No Recipes to Show.</p>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Recipes;\n","\n\nfunction Footer() {\n  return (\n    <footer className=\"main-footer py-2\">\n      <div className=\"d-flex justify-content-center text-center align-items-center\">\n        <p className=\"mb-0\">My Recipe Book &reg; {new Date().getFullYear()} | Made with love by \n        <a\n          href=\"https://www.linkedin.com/in/antonio-sebastiano/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"ms-1 f-bold\"\n        >\n          Antonio Sebastiano\n        </a></p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport AddRecipe from \"./components/AddRecipe\";\nimport ShowAddForm from \"./components/ShowAddForm\";\nimport Recipes from \"./components/Recipes\";\nimport Footer from \"./components/Footer\";\n\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [showAddRecipe, setShowAddRecipe] = useState(false);\n\n  const [recipes, setRecipes] = useState([]);\n  const [ingrList, setIngrList] = useState([]);\n\n  // Only run once the first time the component is rendered\n  useEffect(() => {\n    if (localStorage.getItem(\"recipesData\")) {\n      setRecipes(JSON.parse(localStorage.getItem(\"recipesData\")));\n    }\n  }, []);\n\n  // Run every time our recipe state changes\n  useEffect(() => {\n    localStorage.setItem(\"recipesData\", JSON.stringify(recipes));\n  }, [recipes]);\n\n  // Delete recipe\n  const deleteRecipe = (id) => {\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  };\n\n  // Add Recipe\n  const addRecipe = (recipe) => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newRecipe = { id, ...recipe };\n    setRecipes([...recipes, newRecipe]);\n  };\n\n  // Delete ingredient from the form\n  const deleteIngredient = (id) => {\n    // console.log(\"delete\", id);\n    setIngrList(ingrList.filter((ingredient) => ingredient.ingId !== id));\n  };\n\n  // Add ingredient\n  const addIngredient = (qty, unit, ingName, ingPerServe) => {\n    const ingId = Math.floor(Math.random() * 1000) + 1;\n    // console.log(id);\n    const newIngredient = { ingId, qty, unit, ingName, ingPerServe };\n    setIngrList([...ingrList, newIngredient]);\n  };\n\n\n  // Delete ingredient from the recipes\n  const delIngrRecipes = (id, ingrId) => {\n    const updatedRecipe = recipes.map((recipe) => {\n      if (recipe.id === id) {\n        return { ...recipe, ingredients: (recipe.ingredients.filter((ingredient) => ingredient.ingId !== ingrId))};\n      }\n      return recipe;\n    });\n    setRecipes(updatedRecipe);\n  };\n\n\n\n  return (\n    <>\n      <Header />\n      <ShowAddForm\n        onAdd={() => setShowAddRecipe(!showAddRecipe)}\n        showAddRecipe={showAddRecipe}\n      />\n      {showAddRecipe && (\n        <AddRecipe\n          key={recipes.id}\n          addRecipe={addRecipe}\n          setShowAddRecipe={setShowAddRecipe}\n          ingrList={ingrList}\n          setIngrList={setIngrList}\n          deleteIngredient={deleteIngredient}\n          addIngredient={addIngredient}\n        />\n      )}\n      <div className=\"main-container\">\n        <Recipes\n          recipes={recipes}\n          setRecipes={setRecipes}\n          deleteRecipe={deleteRecipe}\n          key={recipes.id}\n          ingrList={ingrList}\n          setIngrList={setIngrList}\n          deleteIngredient={deleteIngredient}\n          addIngredient={addIngredient}\n          delIngrRecipes={delIngrRecipes}\n        />\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}