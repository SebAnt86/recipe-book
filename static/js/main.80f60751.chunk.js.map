{"version":3,"sources":["components/Header.js","components/Ingredients.js","components/AddRecipe.js","components/ShowAddForm.js","components/Recipes.js","App.js","index.js"],"names":["Header","className","Ingredients","deleteIngredient","addIngredient","ingrList","servingPpl","useState","qty","setQty","unit","setUnit","ingName","setIngName","qtyValidated","setQtyValidated","ingNameValidated","setIngNameValidated","Row","Form","Label","Col","sm","Floating","Control","id","type","value","onChange","e","target","htmlFor","Button","variant","size","onClick","preventDefault","length","map","ingr","CloseButton","ingId","AddRecipe","addRecipe","recipeNameValid","setRecipeNameValid","servesValid","setServesValid","ingredientsValid","setIngredientsValid","recipeName","setRecipeName","prepTime","setPrepTime","cookingTime","setCookingTime","setServingPpl","method","setMethod","servesOrigin","setServesOrigin","setIngrList","noValidate","onSubmit","serves","ingredients","xl","required","md","filter","ingredient","ingPerServe","newIngredient","Math","floor","random","as","ShowAddForm","onAdd","Recipes","recipes","setRecipes","deleteRecipe","Container","recipe","Accordion","Item","eventKey","toUpperCase","Body","updatedRecipe","parseInt","decreaseServes","increaseServes","title","App","showAddRecipe","setShowAddRecipe","newRecipe","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80f60751.chunk.js","sourcesContent":["\n\nfunction Header() {\n    return (\n        <header className=\"p-3 mb-5\">\n           <h1>My Recipe Book</h1> \n           <blockquote>Store all your recipes in a web page</blockquote>\n        </header>\n    )\n}\n\nexport default Header\n","import { useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CloseButton from \"react-bootstrap/CloseButton\";\n\nfunction Ingredients({\n  deleteIngredient,\n  addIngredient,\n  ingrList,\n  servingPpl\n}) {\n  const [qty, setQty] = useState(\"\");\n  const [unit, setUnit] = useState(\"\");\n  const [ingName, setIngName] = useState(\"\");\n\n  //validation states warning messages\n  const [qtyValidated, setQtyValidated] = useState(false);\n  const [ingNameValidated, setIngNameValidated] = useState(false);\n\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    // validation for the ingredients qty and name\n    if (!qty || !ingName) {\n      setQtyValidated(true);\n      setIngNameValidated(true);\n    } else {\n      const ingPerServe = (qty / servingPpl);\n      addIngredient(qty, unit, ingName, ingPerServe);\n\n      //reset the ingredients values\n      setQty(\"\");\n      setUnit(\"\");\n      setIngName(\"\");\n      setQtyValidated(false);\n      setIngNameValidated(false);\n    }\n  };\n\n  return (\n    <>\n      <Row className=\"g-3 mb-1\">\n        <Form.Label className=\"mb-0\">Ingredients:</Form.Label>\n\n        {/* ingredient name */}\n        <Col sm className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"ing-name\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={ingName}\n              onChange={(e) => setIngName(e.target.value)}\n            />\n            <label htmlFor=\"ing-name\" className=\"pt-2\">\n              Ing. Name *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 text-secondary validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {ingNameValidated && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the ingredient name.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* ingredient qty */}\n        <Col sm className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"qty\"\n              type=\"number\"\n              className=\"pb-1\"\n              value={qty}\n              onChange={(e) => setQty(e.target.value)}\n            />\n            <label htmlFor=\"qty\" className=\"pt-2\">\n              Ing. Quantity *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 text-secondary validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {qtyValidated && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the ingredient quantity.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* ingredient unit */}\n        <Col sm className=\"mt-1 mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"unit\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={unit}\n              onChange={(e) => setUnit(e.target.value)}\n            />\n            <label htmlFor=\"ing-name\" className=\"pt-2\">\n              Ing. Unit\n            </label>\n          </Form.Floating>\n        </Col>\n      </Row>\n\n      <Button variant=\"primary\" size=\"sm\" className=\"mb-3\" onClick={onAdd}>\n        Add Ingredient\n      </Button>\n\n      {ingrList.length > 0 ? (\n        <ul className=\"d-flex  flex-wrap ps-0\">\n          {ingrList.map((ingr) => (\n            <li className=\"ing-item mb-3 d-flex justify-content-between align-items-center px-2 me-2\">\n              <div>\n                <span>{ingr.qty}</span> <span>{ingr.unit}</span>{\" \"}\n                <span>{ingr.ingName}</span>\n              </div>\n              <CloseButton\n                className=\"btn-close ms-2 align-self-start align-self-md-center mt-1\"\n                onClick={() => deleteIngredient(ingr.ingId)}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"mb-5\">No ingredients added.</p>\n      )}\n    </>\n  );\n}\n\nexport default Ingredients;\n","import { useState } from \"react\";\nimport Ingredients from \"./Ingredients\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { BsClockHistory } from \"react-icons/bs\";\nimport { BsClock } from \"react-icons/bs\";\nimport { FaUtensils } from \"react-icons/fa\";\nimport { GiCampCookingPot } from \"react-icons/gi\";\n\nfunction AddRecipe({ addRecipe }) {\n  // validation states\n  const [recipeNameValid, setRecipeNameValid] = useState(false);\n  const [servesValid, setServesValid] = useState(false);\n  const [ingredientsValid, setIngredientsValid] = useState(false);\n\n  // Recipe form states\n  const [recipeName, setRecipeName] = useState(\"\");\n  const [prepTime, setPrepTime] = useState(\"\");\n  const [cookingTime, setCookingTime] = useState(\"\");\n  const [servingPpl, setServingPpl] = useState(\"\");\n  const [method, setMethod] = useState(\"\");\n  \n  const [servesOrigin, setServesOrigin] = useState(\"\");\n\n  const [ingrList, setIngrList] = useState([\n    // {\n    //         ingId: 4,\n    //         qty: 200,\n    //         unit: \"ml\",\n    //         ingName: \"tomato\",\n    //       },\n    //       {\n    //         ingId: 8,\n    //         qty: 200,\n    //         unit: \"g\",\n    //         ingName: \"bechamel\",\n    //       },\n    //       {\n    //         ingId: 6,\n    //         qty: 300,\n    //         unit: \"g\",\n    //         ingName: \"cheese\",\n    //       },\n  ]);\n\n  // fanction to add and display the new recipe\n  const onAdd = (e) => {\n    e.preventDefault();\n\n    if (!recipeName || !servingPpl || (ingrList.length <= 0)) {\n      setServesValid(true);\n      setRecipeNameValid(true);\n      setIngredientsValid(true);\n    } else {\n      setServesOrigin(servingPpl);\n      addRecipe({\n        recipeName,\n        prepTime,\n        cookingTime,\n        serves: servingPpl,\n        ingredients: ingrList,\n        method,\n        servesOrigin,\n      });\n\n      //reset form fields\n      setRecipeName(\"\");\n      setPrepTime(\"\");\n      setCookingTime(\"\");\n      setServingPpl(\"\");\n      setMethod(\"\");\n      setIngrList([]);\n      setServesValid(false);\n      setRecipeNameValid(false);\n      setIngredientsValid(false);\n\n    }\n  };\n\n  // Delete ingredient\n  const deleteIngredient = (id) => {\n    // console.log(\"delete\", id);\n    setIngrList(ingrList.filter((ingredient) => ingredient.ingId !== id));\n  };\n\n  // Add ingredient\n  const addIngredient = (qty, unit, ingName, ingPerServe) => {\n    const ingId = Math.floor(Math.random() * 1000) + 1;\n    // console.log(id);\n    const newIngredient = { ingId, qty, unit, ingName, ingPerServe };\n    setIngrList([...ingrList, newIngredient]);\n  };\n\n  return (\n    <Form className=\"mx-5 mb-5\" noValidate onSubmit={onAdd}>\n      {/* recipe name */}\n      <Row className=\"g-3 mb-3\">\n        <Col xl={6} className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"recipeName\"\n              type=\"text\"\n              //placeholder=\"lasagna\"\n              className=\"pb-1\"\n              required\n              value={recipeName}\n              onChange={(e) => setRecipeName(e.target.value)}\n            />\n            <label htmlFor=\"recipeName\" className=\"pt-2\">\n              Recipe Name *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 text-secondary validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {recipeNameValid && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add a recipe name.\n            </Form.Label>\n          )}\n        </Col>\n\n        {/* method time */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"prepTime\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={prepTime}\n              onChange={(e) => setPrepTime(e.target.value)}\n            />\n            <label htmlFor=\"prepTime\" className=\"pt-2\">\n              <BsClockHistory className=\"pe-1 pb-1\" />\n              Preparation Time\n            </label>\n          </Form.Floating>\n        </Col>\n\n        {/* cooking time */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"cookingTime\"\n              type=\"text\"\n              className=\"pb-1\"\n              value={cookingTime}\n              onChange={(e) => setCookingTime(e.target.value)}\n            />\n            <label htmlFor=\"cookingTime\" className=\"pt-2\">\n              <BsClock className=\"pe-1 pb-1\" />\n              Cooking Time\n            </label>\n          </Form.Floating>\n        </Col>\n\n        {/* serves people */}\n        <Col md className=\"mb-3\">\n          <Form.Floating>\n            <Form.Control\n              id=\"servingPpl\"\n              type=\"number\"\n              className=\"pb-1\"\n              required\n              value={servingPpl}\n              onChange={(e) => {\n                setServingPpl(e.target.value);\n                setServesOrigin(e.target.value);\n              }}\n            />\n            <label htmlFor=\"servingPpl\" className=\"pt-2\">\n              <FaUtensils className=\"pe-1 pb-1\" />\n              Serves *\n            </label>\n          </Form.Floating>\n          <div>\n            <Form.Label className=\"m-0 text-secondary validation-text ps-2\">\n              Required*\n            </Form.Label>\n          </div>\n          {servesValid && (\n            <Form.Label className=\"m-0 text-danger validation-text ps-2\">\n              Please add the serving number.\n            </Form.Label>\n          )}\n        </Col>\n      </Row>\n\n      {/* ingredients */}\n      {ingredientsValid && (\n        <div className=\"text-center\">\n          <Form.Label className=\"m-0 text-danger\">\n            Please add a ingredients.\n          </Form.Label>\n        </div>\n      )}\n      <Ingredients\n        key={ingrList.ingId}\n        deleteIngredient={deleteIngredient}\n        addIngredient={addIngredient}\n        ingrList={ingrList}\n        servingPpl={servingPpl}\n      />\n\n      {/* method steps */}\n      <Row className=\"g-3 mb-3\">\n        <Col>\n          <Form.Floating className=\"mb-3\">\n            <Form.Control\n              id=\"method\"\n              as=\"textarea\"\n              className=\"pb-1 textarea\"\n              value={method}\n              onChange={(e) => setMethod(e.target.value)}\n            />\n            <label htmlFor=\"method\" className=\"pt-2\">\n              <GiCampCookingPot className=\"pe-1 pb-1\" />\n              Method\n            </label>\n          </Form.Floating>\n        </Col>\n      </Row>\n      <div className=\"text-center\">\n        <Button variant=\"primary\" type=\"submit\" size=\"lg\">\n          Save Recipe\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default AddRecipe;\n","import Button from \"react-bootstrap/Button\";\n\nfunction ShowAddForm({ onAdd }) {\n  return (\n    <div className=\"d-flex justify-content-center mb-5\">\n      <Button onClick={onAdd}>Add Recipe</Button>\n    </div>\n  );\n}\n\nexport default ShowAddForm;\n","\n\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n//import Button from \"react-bootstrap/Button\";\n\nimport { ImBin } from \"react-icons/im\";\nimport { IoMdAddCircleOutline } from \"react-icons/io\";\nimport { HiOutlineMinusCircle } from \"react-icons/hi\";\n\n\n\nfunction Recipes({ recipes, setRecipes, deleteRecipe }) {\n\n\n  const increaseServes = (id) => {\n    const updatedRecipe = recipes.map(recipe => {\n      if(recipe.id === id){\n        return {...recipe, serves: (parseInt(recipe.serves) + 1)}\n      }\n      return recipe;\n    })\n    setRecipes(updatedRecipe);\n  };\n\n \n    const decreaseServes = (id) => {\n      const updatedRecipe = recipes.map(recipe => {\n        if(recipe.id === id){\n          return {...recipe, serves: (parseInt(recipe.serves) > 1 ? (parseInt(recipe.serves) - 1) : 1)}\n        }\n        return recipe;\n      })\n      setRecipes(updatedRecipe);\n    };\n\n  return (\n    <>\n      <Container className=\"mb-3\">\n        {/* <Accordion className=\"mx-1 mb-5\"> */}\n          {recipes.map((recipe) => (\n            <Accordion className=\"mx-1 mb-5\">\n            <Accordion.Item eventKey={recipe.id}>\n              <Accordion.Header>\n                {recipe.recipeName.toUpperCase()}\n              </Accordion.Header>\n              <Accordion.Body>\n                <div className=\"d-flex justify-content-between mb-3 \">\n                  <Col className=\"text-center\">\n                    <Col>Prep</Col>\n                    <Col>{recipe.prepTime}</Col>\n                  </Col>\n                  <Col className=\"text-center\">\n                    <Col>Cooking</Col>\n                    <Col>{recipe.cookingTime}</Col>\n                  </Col>\n                  <Col className=\"text-center\">\n                    <Col>Serves</Col>\n                    <Col>{recipe.servesOrigin}</Col>\n                  </Col>\n                </div>\n                <Row className=\"mt-4 g-3\">\n                  <Col md={6} className=\"px-4 mb-3\">\n                    <h4>Ingredients</h4>\n                    <Container className=\"ps-0 mt-4 d-flex justify-content-between\">\n                      <h6>Number of servings</h6>\n                      <div>\n                        <HiOutlineMinusCircle className=\"btn-operators\" onClick={() => decreaseServes(recipe.id)}/>\n                        <span className=\"mx-1\">{recipe.serves}</span>\n                        <IoMdAddCircleOutline className=\"btn-operators\" onClick={() => increaseServes(recipe.id)}/>\n                      </div>\n                    </Container>\n                    {recipe.ingredients.length > 0 ? (\n                      recipe.ingredients.map((ingr) => (\n                        <Row>\n                          <Col>\n                            <span>{ingr.ingPerServe * recipe.serves}</span>\n                            <span className=\"me-2\">{ingr.unit}</span>\n                            <span className=\"mx-2\">{ingr.ingName}</span>\n                          </Col>\n                        </Row>\n                      ))\n                    ) : (\n                      <p className=\"mb-5 disabled\">No ingredients added.</p>\n                    )}\n                  </Col>\n                  <Col md={6} className=\"px-4 mb-3\">\n                    <h4>Method</h4>\n                    <Container className=\"ps-0 mt-4\">{recipe.method}</Container>\n                  </Col>\n                </Row>\n                <div className=\"text-end mt-3\">\n                  <ImBin\n                    className=\"btn-delete px-2 py-1\"\n                    title=\"Delete recipe\"\n                    onClick={() => deleteRecipe(recipe.id)}\n                  />\n                </div>\n              </Accordion.Body>\n            </Accordion.Item>\n            </Accordion>\n          ))}\n        {/* </Accordion> */}\n      </Container>\n    </>\n  );\n}\n\nexport default Recipes;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport AddRecipe from \"./components/AddRecipe\";\nimport ShowAddForm from \"./components/ShowAddForm\";\nimport Recipes from \"./components/Recipes\";\n\nimport { useState } from \"react\";\n\nfunction App() {\n  const [showAddRecipe, setShowAddRecipe] = useState(false);\n\n  const [recipes, setRecipes] = useState([\n    // {\n    //   id: 1,\n    //   recipeName: \"Lasagna\",\n    //   prepTime: \"20 mins\",\n    //   cookingTime: \"30 mins\",\n    //   serves: 4,\n    //   ingredients: [\n    //     {\n    //       ingId: 4,\n    //       qty: 200,\n    //       unit: \"ml\",\n    //       ingName: \"tomato\",\n    //     },\n    //     {\n    //       ingId: 6,\n    //       qty: 200,\n    //       unit: \"g\",\n    //       ingName: \"bechamel\",\n    //     },\n    //     {\n    //       ingId: 7,\n    //       qty: 300,\n    //       unit: \"g\",\n    //       ingName: \"cheese\",\n    //     },\n    //   ],\n    //   method:\n    //     \"Create a layer of the lasagna with tomato ragú, bechamel and cheese untul the top of the tray.\",\n    // },\n    // {\n    //   id: 2,\n    //   recipeName: \"Spaghetti\",\n    //   prepTime: \"20 mins\",\n    //   cookingTime: \"30 mins\",\n    //   serves: 4,\n    //   ingredients: [\n    //     {\n    //       ingId: 1,\n    //       qty: 200,\n    //       unit: \"ml\",\n    //       ingName: \"tomato\",\n    //     },\n    //     {\n    //       ingId: 2,\n    //       qty: 200,\n    //       unit: \"g\",\n    //       ingName: \"bechamel\",\n    //     },\n    //     {\n    //       ingId: 3,\n    //       qty: 300,\n    //       unit: \"g\",\n    //       ingName: \"cheese\",\n    //     },\n    //   ],\n    //   method:\n    //     \"Create a layer of the lasagna with tomato ragú, bechamel and cheese until the top of the tray.\",\n    // },\n    // {\n    //   id: 3,\n    //   recipeName: \"Gnocchi\",\n    //   prepTime: \"20 mins\",\n    //   cookingTime: \"30 mins\",\n    //   serves: 4,\n    //   ingredients: [\n    //     {\n    //       ingId: 7,\n    //       qty: 200,\n    //       unit: \"ml\",\n    //       ingName: \"tomato\",\n    //     },\n    //     {\n    //       ingId: 8,\n    //       qty: 200,\n    //       unit: \"g\",\n    //       ingName: \"bechamel\",\n    //     },\n    //     {\n    //       ingId: 9,\n    //       qty: 300,\n    //       unit: \"g\",\n    //       ingName: \"cheese\",\n    //     },\n    //   ],\n    //   method:\n    //     \"Create a layer of the lasagna with tomato ragú, bechamel and cheese untul the top of the tray.\",\n    // },\n  ]);\n\n\n  // Delete recipe\n  const deleteRecipe = (id) => {\n    //console.log(\"delete\", id);\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  };\n\n  // Add Recipe\n  const addRecipe = (recipe) => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    // console.log(id);\n    const newRecipe = { id, ...recipe };\n    setRecipes([...recipes, newRecipe]);\n  };\n\n  return (\n    <div>\n      <Header />\n      <ShowAddForm onAdd={() => setShowAddRecipe(!showAddRecipe)} />\n      {showAddRecipe && <AddRecipe key={recipes.id} addRecipe={addRecipe} />}\n      <Recipes\n        recipes={recipes}\n        setRecipes={setRecipes}\n        deleteRecipe={deleteRecipe}\n        key={recipes.id}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}